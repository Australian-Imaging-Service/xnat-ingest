name: tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [published]

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]  # , macos-latest, windows-latest]
        python-version: ["3.10", "3.11"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2

    - name: Disable etelemetry
      run:  echo "NO_ET=TRUE" >> $GITHUB_ENV

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # - name: Install other dependencies
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y libxml2-dev libxslt-dev git dcmtk

    - name: Install Minconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-activate-base: true
        activate-environment: ""

    - name: Install MRtrix via Conda
      run: |
        conda install -c mrtrix3 mrtrix3
        mrconvert --version        

    - name: Update build tools
      run: python${{ matrix.python-version }} -m pip install --upgrade pip

    - name: Install Xnat-Ingest
      run: python${{ matrix.python-version }} -m pip install .[test]

    - name: Save XNAT username/password in ~/.netrc
      run: |
        echo "machine localhost:8080" > $HOME/.netrc
        echo "user admin" >> $HOME/.netrc
        echo "password admin" >> $HOME/.netrc

    - name: Pytest
      run: pytest -vvs --cov xnat_ingest --cov-config .coveragerc --cov-report xml .

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Xnat-Ingest to get python version
      id: getversion
      run: |
        python3 -m pip install .
        echo "VERSION=$(python3 -c 'import xnat_ingest; print(xnat_ingest.__version__)')" >> $GITHUB_OUTPUT       

    - name: Set up Docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
        context: build
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name == 'release' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.getversion.outputs.VERSION }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
